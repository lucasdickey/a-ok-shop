"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"c5e7f24ee6d5\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzhmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJjNWU3ZjI0ZWU2ZDVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/lib/shopify.ts":
/*!****************************!*\
  !*** ./app/lib/shopify.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createShopifyCheckout: function() { return /* binding */ createShopifyCheckout; },\n/* harmony export */   getAllProducts: function() { return /* binding */ getAllProducts; },\n/* harmony export */   getProductByHandle: function() { return /* binding */ getProductByHandle; },\n/* harmony export */   getProductsByCategory: function() { return /* binding */ getProductsByCategory; }\n/* harmony export */ });\n/* harmony import */ var graphql_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql-request */ \"(app-pages-browser)/./node_modules/graphql-request/build/esm/index.js\");\n\n// Initialize GraphQL client\nconst getShopifyClient = ()=>{\n    // Get credentials from environment variables\n    const storeDomain = \"19gpdr-ps.myshopify.com\";\n    const token = \"4b49c3f76d66c4c3e27116438c3470d3\";\n    if (!storeDomain || !token) {\n        console.error(\"Missing Shopify API credentials\");\n        throw new Error(\"Shopify API credentials are missing. Please check your environment variables.\");\n    }\n    // Correct Shopify Storefront API endpoint format\n    const endpoint = \"https://\".concat(storeDomain, \"/api/2023-07/graphql.json\");\n    return new graphql_request__WEBPACK_IMPORTED_MODULE_0__.GraphQLClient(endpoint, {\n        headers: {\n            \"X-Shopify-Storefront-Access-Token\": token,\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        }\n    });\n};\n// Mock products for development when API is not available\nconst mockProducts = [\n    {\n        id: \"gid://shopify/Product/1\",\n        handle: \"mock-tshirt-1\",\n        title: \"A-OK T-Shirt\",\n        description: \"A comfortable t-shirt with the A-OK logo\",\n        priceRange: {\n            minVariantPrice: {\n                amount: \"29.99\"\n            }\n        },\n        images: {\n            edges: [\n                {\n                    node: {\n                        url: \"/images/product-placeholder.jpg\",\n                        altText: \"A-OK T-Shirt\"\n                    }\n                }\n            ]\n        },\n        variants: {\n            edges: [\n                {\n                    node: {\n                        id: \"gid://shopify/ProductVariant/1\",\n                        title: \"Default\",\n                        price: {\n                            amount: \"29.99\"\n                        },\n                        availableForSale: true\n                    }\n                }\n            ]\n        },\n        tags: [\n            \"t-shirt\",\n            \"apparel\"\n        ],\n        productType: \"T-Shirts\"\n    },\n    {\n        id: \"gid://shopify/Product/2\",\n        handle: \"mock-hoodie-1\",\n        title: \"A-OK Hoodie\",\n        description: \"A warm hoodie with the A-OK logo\",\n        priceRange: {\n            minVariantPrice: {\n                amount: \"49.99\"\n            }\n        },\n        images: {\n            edges: [\n                {\n                    node: {\n                        url: \"/images/product-placeholder.jpg\",\n                        altText: \"A-OK Hoodie\"\n                    }\n                }\n            ]\n        },\n        variants: {\n            edges: [\n                {\n                    node: {\n                        id: \"gid://shopify/ProductVariant/2\",\n                        title: \"Default\",\n                        price: {\n                            amount: \"49.99\"\n                        },\n                        availableForSale: true\n                    }\n                }\n            ]\n        },\n        tags: [\n            \"hoodie\",\n            \"apparel\"\n        ],\n        productType: \"Hoodies\"\n    },\n    {\n        id: \"gid://shopify/Product/3\",\n        handle: \"mock-cap-1\",\n        title: \"A-OK Cap\",\n        description: \"A stylish cap with the A-OK logo\",\n        priceRange: {\n            minVariantPrice: {\n                amount: \"19.99\"\n            }\n        },\n        images: {\n            edges: [\n                {\n                    node: {\n                        url: \"/images/product-placeholder.jpg\",\n                        altText: \"A-OK Cap\"\n                    }\n                }\n            ]\n        },\n        variants: {\n            edges: [\n                {\n                    node: {\n                        id: \"gid://shopify/ProductVariant/3\",\n                        title: \"Default\",\n                        price: {\n                            amount: \"19.99\"\n                        },\n                        availableForSale: true\n                    }\n                }\n            ]\n        },\n        tags: [\n            \"cap\",\n            \"accessories\"\n        ],\n        productType: \"Accessories\"\n    }\n];\n// Fetch all products\nasync function getAllProducts() {\n    const client = getShopifyClient();\n    const query = \"\\n    query {\\n      products(first: 50) {\\n        edges {\\n          node {\\n            id\\n            handle\\n            title\\n            description\\n            priceRange {\\n              minVariantPrice {\\n                amount\\n              }\\n            }\\n            images(first: 1) {\\n              edges {\\n                node {\\n                  url\\n                  altText\\n                }\\n              }\\n            }\\n            variants(first: 1) {\\n              edges {\\n                node {\\n                  id\\n                  title\\n                  price {\\n                    amount\\n                  }\\n                  availableForSale\\n                }\\n              }\\n            }\\n            tags\\n            productType\\n          }\\n        }\\n      }\\n    }\\n  \";\n    try {\n        console.log(\"Fetching products from Shopify...\");\n        console.log(\"GraphQL Query:\", query);\n        const data = await client.request(query);\n        console.log(\"Products fetched successfully:\", data.products.edges.length);\n        // Log all product types to see the exact values\n        const products = data.products.edges.map((param)=>{\n            let { node } = param;\n            return node;\n        });\n        console.log(\"All product types in Shopify:\", products.map((p)=>'\"'.concat(p.productType, '\"')).join(\", \"));\n        return products;\n    } catch (error) {\n        console.error(\"Error fetching products from Shopify API:\", error);\n        // More detailed error logging\n        if (error instanceof Error) {\n            console.error(\"Error message:\", error.message);\n            // @ts-ignore\n            if (error.response) {\n                // @ts-ignore\n                console.error(\"Response details:\", JSON.stringify(error.response, null, 2));\n            }\n        }\n        console.log(\"Using mock products instead\");\n        return mockProducts;\n    }\n}\n// Fetch products by category\nasync function getProductsByCategory(category) {\n    const client = getShopifyClient();\n    // Map UI category names to query patterns using both tags and product types\n    let queryFilter = \"\";\n    if (category.toLowerCase() === \"hats\") {\n        // Use both tag and product_type filters for hats\n        queryFilter = \"tag:hats OR product_type:hats\";\n    } else if (category.toLowerCase() === \"t-shirts\") {\n        // Use both tag and product_type filters for t-shirts\n        queryFilter = \"tag:t-shirts OR product_type:t-shirts\";\n    } else if (category.toLowerCase() === \"hoodies\") {\n        // Use both tag and product_type filters for hoodies\n        queryFilter = \"tag:hoodies OR product_type:hoodies\";\n    } else {\n        // Default case - use the category as both tag and product_type\n        queryFilter = \"tag:\".concat(category.toLowerCase(), \" OR product_type:\").concat(category.toLowerCase());\n    }\n    const query = '\\n    query {\\n      products(first: 50, query: \"'.concat(queryFilter, '\") {\\n        edges {\\n          node {\\n            id\\n            handle\\n            title\\n            description\\n            priceRange {\\n              minVariantPrice {\\n                amount\\n              }\\n            }\\n            images(first: 1) {\\n              edges {\\n                node {\\n                  url\\n                  altText\\n                }\\n              }\\n            }\\n            variants(first: 1) {\\n              edges {\\n                node {\\n                  id\\n                  title\\n                  price {\\n                    amount\\n                  }\\n                  availableForSale\\n                }\\n              }\\n            }\\n            tags\\n            productType\\n          }\\n        }\\n      }\\n    }\\n  ');\n    try {\n        console.log(\"Fetching products for category: \".concat(category, \" using filter: \").concat(queryFilter));\n        const data = await client.request(query);\n        console.log(\"Category products fetched successfully:\", data.products.edges.length);\n        const products = data.products.edges.map((param)=>{\n            let { node } = param;\n            return node;\n        });\n        // Log the product details that were found\n        console.log(\"Found products:\");\n        products.forEach((p)=>{\n            console.log(\"- \".concat(p.title, ' (Type: \"').concat(p.productType, '\", Tags: ').concat(p.tags.join(\", \"), \")\"));\n        });\n        return products;\n    } catch (error) {\n        console.error(\"Error fetching products for category \".concat(category, \":\"), error);\n        // More detailed error logging\n        if (error instanceof Error) {\n            console.error(\"Error message:\", error.message);\n            // @ts-ignore\n            if (error.response) {\n                // @ts-ignore\n                console.error(\"Response details:\", JSON.stringify(error.response, null, 2));\n            }\n        }\n        // Fallback to getting all products and filtering manually\n        console.log(\"Falling back to manual filtering for category: \".concat(category));\n        const allProducts = await getAllProducts();\n        // Filter products by both tags and product type\n        const filteredProducts = allProducts.filter((product)=>{\n            const normalizedTags = product.tags.map((tag)=>tag.toLowerCase());\n            const normalizedProductType = product.productType.toLowerCase();\n            // Check if any tag or product type matches the category\n            if (category.toLowerCase() === \"hats\") {\n                return normalizedTags.some((tag)=>tag.includes(\"hat\") || tag.includes(\"cap\")) || normalizedProductType.includes(\"hat\") || normalizedProductType.includes(\"cap\");\n            } else if (category.toLowerCase() === \"t-shirts\") {\n                return normalizedTags.some((tag)=>tag.includes(\"shirt\")) || normalizedProductType.includes(\"t-shirt\");\n            } else if (category.toLowerCase() === \"hoodies\") {\n                return normalizedTags.some((tag)=>tag.includes(\"hoodie\")) || normalizedProductType.includes(\"hoodie\");\n            } else {\n                return normalizedTags.some((tag)=>tag.includes(category.toLowerCase())) || normalizedProductType.includes(category.toLowerCase());\n            }\n        });\n        console.log(\"Fallback found \".concat(filteredProducts.length, \" products for category: \").concat(category));\n        return filteredProducts;\n    }\n}\n// Fetch a single product by handle\nasync function getProductByHandle(handle) {\n    // For mock data, return a mock product if the handle matches\n    const mockProduct = mockProducts.find((p)=>p.handle === handle);\n    if (mockProduct) {\n        return mockProduct;\n    }\n    const client = getShopifyClient();\n    const query = \"\\n    query GetProductByHandle($handle: String!) {\\n      productByHandle(handle: $handle) {\\n        id\\n        handle\\n        title\\n        description\\n        priceRange {\\n          minVariantPrice {\\n            amount\\n          }\\n        }\\n        images(first: 10) {\\n          edges {\\n            node {\\n              url\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 10) {\\n          edges {\\n            node {\\n              id\\n              title\\n              price {\\n                amount\\n              }\\n              availableForSale\\n            }\\n          }\\n        }\\n        tags\\n        productType\\n      }\\n    }\\n  \";\n    try {\n        const data = await client.request(query, {\n            handle\n        });\n        return data.productByHandle;\n    } catch (error) {\n        console.error(\"Error fetching product:\", error);\n        // Return the first mock product as a fallback\n        return mockProducts[0];\n    }\n}\n// Create a checkout\nasync function createShopifyCheckout(lineItems) {\n    const client = getShopifyClient();\n    const query = \"\\n    mutation CheckoutCreate($input: CheckoutCreateInput!) {\\n      checkoutCreate(input: $input) {\\n        checkout {\\n          id\\n          webUrl\\n        }\\n        checkoutUserErrors {\\n          code\\n          field\\n          message\\n        }\\n      }\\n    }\\n  \";\n    // Convert lineItems to the format expected by the Shopify API\n    const formattedLineItems = lineItems.map((item)=>({\n            variantId: item.variantId,\n            quantity: item.quantity\n        }));\n    try {\n        const variables = {\n            input: {\n                lineItems: formattedLineItems\n            }\n        };\n        const data = await client.request(query, variables);\n        if (data.checkoutCreate.checkoutUserErrors.length > 0) {\n            throw new Error(data.checkoutCreate.checkoutUserErrors[0].message);\n        }\n        return data.checkoutCreate.checkout.webUrl;\n    } catch (error) {\n        console.error(\"Error creating checkout:\", error);\n        // Return a mock checkout URL\n        return \"https://aokstore.myshopify.com/checkout\";\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/shopify.ts\n"));

/***/ })

});